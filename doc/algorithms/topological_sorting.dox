/*!

@file topological_sorting.dox
@author Eugene Yakimov

@page topological_sorting 

@section topological_sorting_algo

В данном разделе описан алгоритм топологической сортировки.

Алгоритм заключается в обходе в глубину.

При запуске из какой-то вершины v алгоритм пытается запуститься вдоль всех рёбер, исходящих из v.
Вдоль тех рёбер, концы которых уже были посещены ранее, он не проходит,
а вдоль всех остальных — проходит и вызывает себя от их концов.

Таким образом, к моменту выхода из вызова dfs(v) все вершины, достижимые из v как непосредственно (по одному ребру),
так и косвенно (по пути) — все такие вершины уже посещены обходом.
Следовательно, если мы будем в момент выхода из {\rm dfs}(v) добавлять нашу вершину в начало некоего списка,
то в конце концов в этом списке получится топологическая сортировка.

Алгоритм реализован в функции graph::TopologicalSorting().

*/


/*!
@fn graph::TopologicalSorting(const T& graph, std::vector<size_t>* points)

Функция реализует алгоритм топологической сортировки, описанный в разделе
@ref topological_sorting.

Время работы алгоритма
\f$
O(N + M),
\f$
где \f$ N \f$ --- размер массива.
*/